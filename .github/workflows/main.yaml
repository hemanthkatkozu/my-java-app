name: CI/CD Pipeline

on:
  # push:
  #   branches:
  #     - main
  # pull_request:
  #   branches:
  #     - main

env:
  DOCKER_IMAGE: <your-docker-repo>/hemanthforyou-channel-app
  KUBE_NAMESPACE: default
  KUBE_DEPLOYMENT: hemanthforyou-channel-app

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: Set up JDK for Maven
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    # Step 3: Build the Maven project
    - name: Build with Maven
      run: mvn clean package -DskipTests

    # Step 4: Set up Docker Buildx (to build multi-platform images if needed)
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Step 5: Log in to Docker Hub (replace secrets with your credentials)
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Step 6: Build the Docker image
    - name: Build Docker image
      run: |
        docker build -t $DOCKER_IMAGE:latest .

    # Step 7: Push the Docker image to Docker Hub
    - name: Push Docker image
      run: |
        docker push $DOCKER_IMAGE:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository (again, since this is a separate job)
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: Set up kubectl to interact with Kubernetes cluster
    - name: Set up kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: v1.26.0 # Adjust version based on your Kubernetes version

    # Step 3: Configure kubeconfig (replace this with your own KUBECONFIG or use secrets)
    - name: Set up kubeconfig
      run: |
        echo "${{ secrets.KUBECONFIG }}" > $HOME/.kube/config

    # Step 4: Deploy to Kubernetes
    - name: Deploy to Kubernetes
      run: |
        kubectl set image deployment/$KUBE_DEPLOYMENT $KUBE_DEPLOYMENT=$DOCKER_IMAGE:latest --namespace=$KUBE_NAMESPACE
        kubectl rollout status deployment/$KUBE_DEPLOYMENT --namespace=$KUBE_NAMESPACE
